package com.gss.student.webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/5/2015 3:54:30 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class AbsentDetail implements KvmSerializable {
    
    public int mMonth;
    public int mMonthlyPercent;
    public VectorDailyAbsents dailyAbsentList;
    
    public AbsentDetail(){}
    
    public AbsentDetail(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("mMonth"))
        {
            Object obj = soapObject.getProperty("mMonth");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMonth = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mMonth = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("mMonthlyPercent"))
        {
            Object obj = soapObject.getProperty("mMonthlyPercent");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMonthlyPercent = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mMonthlyPercent = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("dailyAbsentList"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("dailyAbsentList");
            dailyAbsentList = new VectorDailyAbsents(j);
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return mMonth;
            case 1:
                return mMonthlyPercent;
            case 2:
                return dailyAbsentList;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 3;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "mMonth";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "mMonthlyPercent";
                break;
            case 2:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "dailyAbsentList";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
